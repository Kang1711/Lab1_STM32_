/*
 * solfware_timer.h
 *
 *  Created on: Sep 30, 2024
 *      Author: Ngo Truc Linh
 */

#ifndef INC_SOLFWARE_TIMER_H_
#define INC_SOLFWARE_TIMER_H_



#endif /* INC_SOLFWARE_TIMER_H_ */
#include "main.h"

int timer1_counter=0;
int timer1_flag=0;
int timer2_counter=0;
int timer2_flag=0;
const int MAX_LED = 4;
int led_buffer[4]= {1, 5, 0, 8};
const uint8_t segment_p[10] = {
    0b00111111,
    0b00000110,
    0b01011011,
    0b01001111,
    0b01100110,
    0b01101101,
    0b01111101,
    0b00000111,
    0b01111111,
    0b01101111
};
void display7SEG5(int num) {
    if (num < 0 || num > 9) return;
    uint8_t p = segment_p[num];

    //Check tá»«ng bit trong segment_p
    HAL_GPIO_WritePin(Seg0_GPIO_Port, Seg0_Pin, (p & 0x01) ? RESET : SET);
    HAL_GPIO_WritePin(Seg1_GPIO_Port, Seg1_Pin, (p & 0x02) ? RESET : SET);
    HAL_GPIO_WritePin(Seg2_GPIO_Port, Seg2_Pin, (p & 0x04) ? RESET : SET);
    HAL_GPIO_WritePin(Seg3_GPIO_Port, Seg3_Pin, (p & 0x08) ? RESET : SET);
    HAL_GPIO_WritePin(Seg4_GPIO_Port, Seg4_Pin, (p & 0x10) ? RESET : SET);
    HAL_GPIO_WritePin(Seg5_GPIO_Port, Seg5_Pin, (p & 0x20) ? RESET : SET);
    HAL_GPIO_WritePin(Seg6_GPIO_Port, Seg6_Pin, (p & 0x40) ? RESET : SET);
}

/*void display7SEG5(int num) {
	//uint8_t p = segment_p[num];
	if(num==2){
    HAL_GPIO_WritePin(Seg0_GPIO_Port, Seg0_Pin, RESET);
    HAL_GPIO_WritePin(Seg1_GPIO_Port, Seg1_Pin, RESET);
    HAL_GPIO_WritePin(Seg2_GPIO_Port, Seg2_Pin, SET);
    HAL_GPIO_WritePin(Seg3_GPIO_Port, Seg3_Pin, RESET);
    HAL_GPIO_WritePin(Seg4_GPIO_Port, Seg4_Pin, RESET);
    HAL_GPIO_WritePin(Seg5_GPIO_Port, Seg5_Pin, SET);
    HAL_GPIO_WritePin(Seg6_GPIO_Port, Seg6_Pin, RESET);
	}
	else if(num==1){
		HAL_GPIO_WritePin(Seg0_GPIO_Port, Seg0_Pin, SET);
		HAL_GPIO_WritePin(Seg1_GPIO_Port, Seg1_Pin, RESET);
		HAL_GPIO_WritePin(Seg2_GPIO_Port, Seg2_Pin, RESET);
		HAL_GPIO_WritePin(Seg3_GPIO_Port, Seg3_Pin, SET);
		HAL_GPIO_WritePin(Seg4_GPIO_Port, Seg4_Pin, SET);
		HAL_GPIO_WritePin(Seg5_GPIO_Port, Seg5_Pin, SET);
		HAL_GPIO_WritePin(Seg6_GPIO_Port, Seg6_Pin, SET);
	}
}*/
void clearC(){
	HAL_GPIO_WritePin(Seg0_GPIO_Port, Seg0_Pin, SET);
	    HAL_GPIO_WritePin(Seg1_GPIO_Port, Seg1_Pin, SET);
	    HAL_GPIO_WritePin(Seg2_GPIO_Port, Seg2_Pin, SET);
	    HAL_GPIO_WritePin(Seg3_GPIO_Port, Seg3_Pin, SET);
	    HAL_GPIO_WritePin(Seg4_GPIO_Port, Seg4_Pin, SET);
	    HAL_GPIO_WritePin(Seg5_GPIO_Port, Seg5_Pin, SET);
	    HAL_GPIO_WritePin(Seg6_GPIO_Port, Seg6_Pin, SET);
}
void updateClockBuffer(int hour, int minute, int second){
	if (hour < 10) {
	    led_buffer[0] = 0;
	    led_buffer[1] = hour;
	    } else {
	        led_buffer[0] = hour / 10;
	        led_buffer[1] = hour % 10;
	    }

	 if (minute < 10) {
	        led_buffer[2] = 0;
	        led_buffer[3] = minute;
	 } else {
	        led_buffer[2] = minute / 10;
	        led_buffer[3] = minute % 10;
	 }
}
void update7SEG(int index) {
    if (index < 0 || index >= MAX_LED) {
        return;
    }
    switch (index) {
        case 0:

            HAL_GPIO_WritePin(En0_GPIO_Port, En0_Pin, RESET);
            HAL_GPIO_WritePin(En1_GPIO_Port, En1_Pin, SET);
            HAL_GPIO_WritePin(En2_GPIO_Port, En2_Pin, SET);
            HAL_GPIO_WritePin(En3_GPIO_Port, En3_Pin, SET);
            display7SEG5(led_buffer[0]);
            break;
        case 1:

            HAL_GPIO_WritePin(En0_GPIO_Port, En0_Pin, SET);
            HAL_GPIO_WritePin(En1_GPIO_Port, En1_Pin, RESET);
            HAL_GPIO_WritePin(En2_GPIO_Port, En2_Pin, SET);
            HAL_GPIO_WritePin(En3_GPIO_Port, En3_Pin, SET);
            display7SEG5(led_buffer[1]);
            break;
        case 2:

            HAL_GPIO_WritePin(En0_GPIO_Port, En0_Pin, SET);
            HAL_GPIO_WritePin(En1_GPIO_Port, En1_Pin, SET);
            HAL_GPIO_WritePin(En2_GPIO_Port, En2_Pin, RESET);
            HAL_GPIO_WritePin(En3_GPIO_Port, En3_Pin, SET);
            display7SEG5(led_buffer[2]);
            break;
        case 3:
        	HAL_GPIO_WritePin(En0_GPIO_Port, En0_Pin, SET);
            HAL_GPIO_WritePin(En1_GPIO_Port, En1_Pin, SET);
        	HAL_GPIO_WritePin(En2_GPIO_Port, En2_Pin, SET);
        	HAL_GPIO_WritePin(En3_GPIO_Port, En3_Pin, RESET);
            display7SEG5(led_buffer[3]);
            break;
        default:
            break;
    }
}
/*void setTimer2(int d){
	timer2_counter=d;
	timer2_flag=0;
}*/

void setTimer0( int duration ) {
	timer0_counter = duration / TIMER_CYCLE ;
	timer0_flag = 0;
}

void timer_run () {
	if ( timer0_counter > 0) {
		timer0_counter --;
		if ( timer0_counter == 0) timer0_flag = 1;
	}
	if(timer1_counter>0){
		timer1_counter--;
		if(timer1_counter ==0) timer1_flag=1;
	}
}
void timerRun(){
	if (timer1_counter>0){
		timer1_counter--;
		if(timer1_counter<=0){
			timer1_flag=1;
		}
	}
	if (timer2_counter>0){ //Ex1
			timer2_counter--;
			if(timer2_counter<=0){
				timer2_flag=1;
			}
	}
}


